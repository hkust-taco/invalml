
import "./Predef.mls"
open Predef


// TODO
// type Option[A] = Option.Some(A) | Option.None

module Option with ...

// See https://github.com/hkust-taco/mlscript/pull/295#discussion_r2029692230
// TODO support type/module overloading
type T[A]

data class Some[T](value)
object None

fun isDefined(x) = if x is
  Some then true
  None then false

data class Both(fst, snd)


fun getOrElse(opt, default) = if opt is
  Some(value) then value
  None then default

fun flatMap(opt, f) = if opt is
  Some(value) then f(value)
  None then None

module unsafe with
  fun get(opt) = if opt is
    Some(value) then value
    None then throw Error("None.get")
