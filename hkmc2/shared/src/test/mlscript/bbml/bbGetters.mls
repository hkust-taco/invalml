:js
:noSanityCheck // * For some reason, these cause problems

:global
:bbml
//│ Type: ⊤


:todo
fun test1() =
  fun sayHi = print("Hi")
  sayHi, sayHi, sayHi
//│ ╔══[ERROR] Function definition shape not yet supported for sayHi
//│ ║  l.11: 	  fun sayHi = print("Hi")
//│ ╙──      	              ^^^^^^^^^^^
//│ ╔══[ERROR] Variable not found: sayHi
//│ ║  l.12: 	  sayHi, sayHi, sayHi
//│ ╙──      	  ^^^^^
//│ ╔══[ERROR] Variable not found: sayHi
//│ ║  l.12: 	  sayHi, sayHi, sayHi
//│ ╙──      	         ^^^^^
//│ ╔══[ERROR] Variable not found: sayHi
//│ ║  l.12: 	  sayHi, sayHi, sayHi
//│ ╙──      	                ^^^^^
//│ Type: ⊤

test1()
//│ > Hi
//│ > Hi
//│ > Hi
//│ Type: ⊥


:todo // it feels like this should work
fun test2() =
  fun funny = case
    0 then 0
    n then funny(n - 1) + 1
  funny
//│ ╔══[ERROR] Expected a monomorphic type or an instantiable type here, but () ->{⊥} [outer, 'caseScrut, 'eff] -> 'caseScrut ->{'eff} Int found
//│ ║  l.38: 	    n then funny(n - 1) + 1
//│ ║        	           ^^^^^^^^^^^^^^^^
//│ ║  l.39: 	  funny
//│ ╙──      	^^^^^^^
//│ Type: ⊤

fun test2() =
  fun funny = case
    0 then 0
    n then funny(n - 1) + 1
  funny(_)
//│ Type: ⊤

test2
//│ = [function test2]
//│ Type: () -> (Int -> Int)

:sjs
test2()
//│ JS (unsanitized):
//│ test21()
//│ = [function]
//│ Type: Int -> Int

:ssjs
test2()(5)
//│ JS:
//│ tmp = test21(); block$res8 = runtime.safeCall(tmp(5)); undefined
//│ = 5
//│ Type: Int


// * Notice the mistake here; we warn that the first case in statement position is useless!
:w
:e
:sjs
fun test2() =
  fun funny = 
    case 0 then 0
    case n then funny(n - 1) + 1
  funny
//│ ═══[WARNING] Pure expression in statement position
//│ JS (unsanitized):
//│ let test22;
//│ test22 = function test2() {
//│   let funny, tmp1;
//│   funny = function funny() {
//│     let lambda;
//│     lambda = (undefined, function (caseScrut) {
//│       let n, tmp2, tmp3, tmp4;
//│       n = caseScrut;
//│       tmp2 = funny();
//│       tmp3 = n - 1;
//│       tmp4 = tmp2(tmp3);
//│       return tmp4 + 1
//│     });
//│     return lambda
//│   };
//│   tmp1 = funny();
//│   return tmp1
//│ };
//│ ═══[WARNING] Pure expression in statement position
//│ ╔══[ERROR] Function definition shape not yet supported for funny
//│ ║  l.80: 	    case n then funny(n - 1) + 1
//│ ╙──      	                ^^^^^^^^^^^^^^^^
//│ ╔══[ERROR] Variable not found: funny
//│ ║  l.81: 	  funny
//│ ╙──      	  ^^^^^
//│ Type: ⊤


:todo
fun test3 =
  print("Hi")
//│ ╔══[ERROR] Function definition shape not yet supported for test3
//│ ║  l.114: 	  print("Hi")
//│ ╙──       	  ^^^^^^^^^^^
//│ Type: ⊤


