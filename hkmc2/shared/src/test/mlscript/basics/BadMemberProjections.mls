:js


:sjs
:e
1::x
//│ ╔══[ERROR] Integer literal is not a known class.
//│ ║  l.6: 	1::x
//│ ║       	^
//│ ╟── Note: any expression of the form `‹expression›::‹identifier›` is a member projection;
//│ ╙──   add a space before ‹identifier› to make it an operator application.
//│ JS (unsanitized):
//│ let lambda;
//│ lambda = (undefined, function (self, ...args) {
//│   return runtime.safeCall(self.x(...args))
//│ });
//│ lambda
//│ = [function]

:ssjs
:e
:re
1::x()
//│ ╔══[ERROR] Integer literal is not a known class.
//│ ║  l.23: 	1::x()
//│ ║        	^
//│ ╟── Note: any expression of the form `‹expression›::‹identifier›` is a member projection;
//│ ╙──   add a space before ‹identifier› to make it an operator application.
//│ JS:
//│ lambda1 = (undefined, function (...args1) {
//│   globalThis.Predef.checkArgs("", 1, false, args1.length);
//│   let self = args1[0];
//│   let args = runtime.Tuple.slice(args1, 1, 0);
//│   return runtime.safeCall(self.x(...args))
//│ });
//│ block$res2 = runtime.checkCall(lambda1());
//│ undefined
//│ ═══[RUNTIME ERROR] Error: Function expected at least 1 argument but got 0


fun (::) f(a, b) = [a, b]

let x = 1
//│ x = 1

"A" :: x
//│ = ["A", 1]

"A":: x
//│ = ["A", 1]

:e
"A"::x
//│ ╔══[ERROR] String literal is not a known class.
//│ ║  l.53: 	"A"::x
//│ ║        	^^^
//│ ╟── Note: any expression of the form `‹expression›::‹identifier›` is a member projection;
//│ ╙──   add a space before ‹identifier› to make it an operator application.
//│ = [function]

:e
"A" ::x
//│ ╔══[ERROR] String literal is not a known class.
//│ ║  l.62: 	"A" ::x
//│ ║        	^^^
//│ ╟── Note: any expression of the form `‹expression›::‹identifier›` is a member projection;
//│ ╙──   add a space before ‹identifier› to make it an operator application.
//│ = [function]


