

class Foo[A]

class Foo[A]()

class Foo[A](x: A)

class Foo[A](x: A -> Int)

class Foo[A](x: Foo[A])

class Foo[A](x: Foo[A] -> A)

class Foo[A](x: Bar[A])
class Bar[B](x: Foo[Int], y: B -> Int)

class Foo[A](x: Bar[A])
class Baz[C](x: C)
class Bar[B](x: Foo[Int], y: Baz[B] -> Int)


class Foo[A] with
  fun foo: A -> A




:e
class Foo[A](x: Foo[A, A])
//│ ╔══[ERROR] Wrong number of type arguments
//│ ║  l.30: 	class Foo[A](x: Foo[A, A])
//│ ╙──      	                ^^^^^^^^
//│ ╔══[ERROR] Expected 1 type arguments, got 2
//│ ║  l.30: 	class Foo[A](x: Foo[A, A])
//│ ╙──      	                ^^^^^^^^

:e
class Foo[A](x: Bar[A])
class Bar(x: Foo[Int])
//│ ╔══[ERROR] Wrong number of type arguments
//│ ║  l.39: 	class Foo[A](x: Bar[A])
//│ ╙──      	                ^^^^^
//│ ╔══[ERROR] Expected 0 type arguments, got 1
//│ ║  l.39: 	class Foo[A](x: Bar[A])
//│ ╙──      	                ^^^^^


