:js
:todo


// * Named tuple

[a: 0]
//│ = [{a: 0}]

[1, 2, a: "a", 3, b: "b", 4, 5]
//│ = [1, 2, 3, 4, 5, {a: "a", b: "b"}]

let r = [4, 5, c: "c"]
//│ r = [4, 5, {c: "c"}]

[1, 2, a: "a", 3, b: "b", ...r]
//│ = [1, 2, 3, 4, 5, {c: "c"}, {a: "a", b: "b"}]


let aa = 123
//│ aa = 123

[aa: 0]
//│ = [{aa: 0}]

[aa: aa]
//│ = [{aa: 123}]


// * Named arguments

// :de
:elt
id(a: 0)
//│ Elaborated tree:
//│ Blk:
//│   stats = Nil
//│   res = App:
//│     lhs = SynthSel{member:id}:
//│       prefix = Ref of member:Predef
//│       nme = Ident of "id"
//│     rhs = Tup of Ls of 
//│       Fld:
//│         flags = ()
//│         term = Lit of StrLit of "a"
//│         asc = S of Lit of IntLit of 0
//│ = {a: 0}

id of a: 0
//│ = {a: 0}


print of
  foo: 1
  bar:
    "..."
//│ > {foo: 1, bar: "..."}

print of
  "Hello"
  foo: 1
  bar:
    "..."
  "World"
//│ > Hello World {foo: 1, bar: "..."}


