

declare type Any
declare type Anything
declare type Nothing

declare type untyped

declare class Object
declare class Array
declare class JSON
declare class Number
declare class Function
declare class String
declare class RegExp
declare class Set
declare class Map
declare class Error
declare class TypeError
declare class RangeError
declare class Symbol

// MLscript-specific types
declare class Unit
declare class Bool
declare class Int
declare class Num
declare class Str with
  fun length: Int
  fun concat: Str -> Str

declare module Math with
  declare
    val
      E
      LN10
      LN2
      LOG10E
      LOG2E
      PI
      SQRT1_2
      SQRT2
    fun
      abs
      acos
      acosh
      asin
      asinh
      atan
      atan2
      atanh
      cbrt
      ceil
      clz32
      cos
      cosh
      exp
      expm1
      floor
      f16round
      fround
      hypot
      imul
      log
      log10
      log1p
      log2
      max
      min
      pow
      random
      round
      sign
      sin
      sinh
      sqrt
      sumPrecise
      tan
      tanh
      trunc

declare val Reflect
declare val console
declare val process
declare val fs
declare val Infinity

// declare fun typeof: (Any) -> Str

declare fun parseInt(str: Str, radix: Int): Int
declare fun parseFloat(str: Str): Num


declare module source with
  object
    line
    name
    file

declare module js with
  fun
    try_catch

declare module debug with
  fun printStack
  fun getLocals


// HTML DOM API definitions.
// Move them to a separate Prelude file when there are enough of them.
declare val document
declare val customElements
declare class HTMLElement
