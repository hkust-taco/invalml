

declare type Any
declare type Anything
declare type Nothing

declare type untyped

declare class Object
declare class Array
declare class JSON
declare class Number
declare class Function
declare class String
declare class RegExp
declare class Set
declare class Map
declare class Error
declare class TypeError
declare class RangeError
declare class Symbol
declare class Date

// MLscript-specific types
declare class Unit
declare class Bool
declare class Int
declare class Num
declare class Str

// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math
declare module Math with
  declare
    val
      E: Num
      LN10: Num
      LN2: Num
      LOG10E: Num
      LOG2E: Num
      PI: Num
      SQRT1_2: Num
      SQRT2: Num
    fun
      abs: Num -> Num
      acos: Num -> Num
      acosh: Num -> Num
      asin: Num -> Num
      asinh: Num -> Num
      atan: Num -> Num
      atan2: (Num, Num) -> Num
      atanh: Num -> Num
      cbrt: Num -> Num
      ceil: Num -> Num
      clz32: Num -> Int
      cos: Num -> Num
      cosh: Num -> Num
      exp: Num -> Num
      expm1: Num -> Num
      floor: Num -> Num
      f16round: Num -> Num
      fround: Num -> Num
      hypot(...values): Num
      imul: (Num, Num) -> Int
      log: Num -> Num
      log10: Num -> Num
      log1p: Num -> Num
      log2: Num -> Num
      max(...values): Num
      min(...values): Num
      pow: (Num, Num) -> Num
      random: () -> Num
      round: Num -> Num
      sign: Num -> (-1 | 0 | 1)
      sin: Num -> Num
      sinh: Num -> Num
      sqrt: Num -> Num
      tan: Num -> Num
      tanh: Num -> Num
      trunc: Num -> Num

declare val Reflect
declare val console
declare val process
declare val fs
declare val Infinity

// declare fun typeof: (Any) -> Str

declare fun parseInt(str: Str, radix: Int): Int
declare fun parseFloat(str: Str): Num


declare module source with
  object
    line
    name
    file

declare module js with
  fun
    try_catch

declare module debug with
  fun printStack
  fun getLocals

declare module annotations with
  object compile


// HTML DOM API definitions.
// Move them to a separate Prelude file when there are enough of them.
declare val document
declare val customElements
declare class HTMLElement
