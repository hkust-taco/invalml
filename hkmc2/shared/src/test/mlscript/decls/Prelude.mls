

declare type Any
declare type Anything
declare type Nothing

declare type untyped

declare class Object
declare class Array
declare class JSON
declare class Number
declare class Function
declare class String
declare class RegExp
declare class Set
declare class Map
declare class Error
declare class TypeError
declare class RangeError
declare class Symbol

// MLscript-specific types
declare class Unit
declare class Bool
declare class Int
declare class Num
declare class Str with
  fun length: Int
  fun concat: Str -> Str

declare module Math with
  // TODO: add more functions
  fun abs: Num -> Num
  fun sqrt: Num -> Num
  fun sin: Num -> Num
  fun cos: Num -> Num
  fun tan: Num -> Num
  fun pow: Num -> Num
  fun round: Num -> Num
  fun trunc: Num -> Num
  fun min: (Num, Num) -> Num
  fun max: (Num, Num) -> Num

declare val Reflect
declare val console
declare val process
declare val fs
declare val Infinity

// declare fun typeof: (Any) -> Str

declare fun parseInt(str: Str, radix: Int): Int
declare fun parseFloat(str: Str): Num


declare module source with
  object
    line
    name
    file

declare module js with
  fun
    try_catch

declare module debug with
  fun printStack
  fun getLocals


