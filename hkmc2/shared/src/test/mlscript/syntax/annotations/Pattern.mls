:js

open annotations { compile }

class Box()

:w
fun foo(x) = if x is @compile Box then "yes" else "no"
//│ ╔══[WARNING] `@compile` cannot be used on class instance patterns.
//│ ║  l.8: 	fun foo(x) = if x is @compile Box then "yes" else "no"
//│ ║       	                      ^^^^^^^
//│ ╙── Note: The `@compile` annotation is for compiling pattern definitions.

object Singleton

:w
fun foo(x) = if x is @compile Singleton then "yes" else "no"
//│ ╔══[WARNING] `@compile` cannot be used on object instance patterns.
//│ ║  l.17: 	fun foo(x) = if x is @compile Singleton then "yes" else "no"
//│ ║        	                      ^^^^^^^
//│ ╙── Note: The `@compile` annotation is for compiling pattern definitions.

:e
fun foo(x) = if x is @compile 42 then "yes" else "no"
//│ ╔══[ERROR] Unrecognized pattern (annotated)
//│ ║  l.24: 	fun foo(x) = if x is @compile 42 then "yes" else "no"
//│ ╙──      	                      ^^^^^^^^^^

object do_not_compile

:w
fun foo(x) = if x is @do_not_compile Box then "yes" else "no"
//│ ╔══[WARNING] This annotation is not supported on class instance patterns.
//│ ║  l.32: 	fun foo(x) = if x is @do_not_compile Box then "yes" else "no"
//│ ╙──      	                      ^^^^^^^^^^^^^^

:e
fun foo(x) = if x is @name_not_found Box then "yes" else "no"
//│ ╔══[ERROR] Name not found: name_not_found
//│ ║  l.38: 	fun foo(x) = if x is @name_not_found Box then "yes" else "no"
//│ ╙──      	                      ^^^^^^^^^^^^^^

pattern Box' = Box

fun foo(x) = if x is @compile Box' then "yes" else "no"

:w
fun foo(x) = if x is @do_not_compile Box' then "yes" else "no"
//│ ╔══[WARNING] This annotation is not supported here.
//│ ║  l.48: 	fun foo(x) = if x is @do_not_compile Box' then "yes" else "no"
//│ ║        	                      ^^^^^^^^^^^^^^
//│ ╙── Note: Patterns (like `Box'`) only support the `@compile` annotation.
