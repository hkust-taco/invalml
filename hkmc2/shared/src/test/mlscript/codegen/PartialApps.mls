:js


fun foo(x, y, z) = [x, y, z]

let f = foo(1, _, 3)
//│ f = [function f]

f(2)
//│ = [1, 2, 3]

:sjs
let f = foo(1, _, _)
//│ JS (unsanitized):
//│ let f2, f3; f3 = function f(_, _1) { return foo(1, _, _1) }; f2 = f3;
//│ f = [function f]

f(2, 3)
//│ = [1, 2, 3]

let g = f(_, 3)
//│ g = [function g]

g(2)
//│ = [1, 2, 3]

foo(_, _, 3) of 1, 2
//│ = [1, 2, 3]

foo(_, _, 3)(1, 2)
//│ = [1, 2, 3]

:fixme
foo(_, _, 3)(1, _)(2)
//│ ═══[ERROR] Illegal position for '_' placeholder.
//│ ═══[RUNTIME ERROR] Error: Function expected 2 arguments but got 1


:todo
foo(..._)
//│ ═══[ERROR] Illegal position for '_' placeholder.
//│ ═══[RUNTIME ERROR] Error: Function 'foo' expected 3 arguments but got 0

:todo
[..._]
//│ ═══[ERROR] Illegal position for '_' placeholder.
//│ = []


let h = _ - 2
//│ h = [function h]

h(1)
//│ = -1


let i = _(0, 1, _)
//│ i = [function i]

i((x, y, z) => x + y + z, 2)
//│ = 3

i((...args) => [...args], _)(2)
//│ = [0, 1, 2]


123 |> (_ + 1)
//│ = 124

123 |> _ + 1
//│ = 124

123 |> (_ + 1 >> _ * 2)
//│ = 248

// * Note: lack of parens
123 |> _ + 1 >> _ * 2
//│ = [function]

123 |> _ + 1 |> _ * 2
//│ = 248

_ * 2 <| _ + 1 <| 123
//│ = 248

_ + 1 >> _ * 2 <| 123
//│ = 248


:todo
let j = _.x
//│ ═══[ERROR] Illegal position for '_' placeholder.
//│ ╔══[COMPILATION ERROR] No definition found in scope for 'j'
//│ ║  l.91: 	let j = _.x
//│ ╙──      	    ^
//│ ═══[RUNTIME ERROR] ReferenceError: j is not defined

:todo
let j = _.x(123)
//│ ═══[ERROR] Illegal position for '_' placeholder.
//│ ╔══[COMPILATION ERROR] No definition found in scope for 'j'
//│ ║  l.99: 	let j = _.x(123)
//│ ╙──      	    ^
//│ ═══[RUNTIME ERROR] ReferenceError: j is not defined

:todo
let j = _.x(1, _)
//│ ═══[ERROR] Illegal position for '_' placeholder.
//│ j = [function j]

:todo // really support this?
let j = _.x.y(1, _)
//│ ═══[ERROR] Illegal position for '_' placeholder.
//│ j = [function j]


data class C(a, b, c)

2 |> C(1, _, 3) |> print
//│ > C(1, 2, 3)

:todo
(2 |> new C(1, _, 3)) |> print
//│ ═══[ERROR] Illegal position for '_' placeholder.
//│ ═══[RUNTIME ERROR] TypeError: f1 is not a function

:fixme // parsing precedence
2 |> new C(1, _, 3) |> print
//│ ═══[RUNTIME ERROR] TypeError: Predef.pipeInto.class is not a constructor


_ - _ of 1, 2
//│ = [function]

(_ - _) of 1, 2
//│ = -1


_ - 2 <| 1
//│ = -1

1 |> _ - 2
//│ = -1

:pe
:w
1
|> _ - 2
//│ ╔══[PARSE ERROR] Expected end of input; found '_' keyword instead
//│ ║  l.148: 	|> _ - 2
//│ ╙──       	   ^
//│ ╔══[WARNING] Pure expression in statement position
//│ ║  l.147: 	1
//│ ╙──       	^
//│ = [function pipeInto]

1
  |> _ - 2
//│ = -1

:sjs
1 . _ - 2
//│ JS (unsanitized):
//│ let lambda24; lambda24 = (undefined, function (_) { return Predef.passTo(1, _) }); lambda24 - 2
//│ = NaN

:sjs
1 . (_ - 2)()
//│ JS (unsanitized):
//│ let tmp9, lambda25;
//│ lambda25 = (undefined, function (_) {
//│   return _ - 2
//│ });
//│ tmp9 = Predef.passTo(1, lambda25);
//│ runtime.safeCall(tmp9())
//│ = -1

1 . (_ - _)(2)
//│ = -1



