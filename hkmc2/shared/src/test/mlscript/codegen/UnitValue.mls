:js


fun foo = return ()

foo

print of foo
//│ > ()


:todo // warn about useless binding
:w
fun foo() =
  let x = 1

print of foo()
//│ > ()


:todo // warn about useless binding
:w
fun foo() =
  val x = 1

print of foo()
//│ > ()


:sjs
print of globalThis.console.log("Hello, world!")
//│ JS (unsanitized):
//│ let tmp4; tmp4 = runtime.safeCall(this.console.log("Hello, world!")); Predef.print(tmp4)
//│ > Hello, world!
//│ > ()


class Box(value)

fun foo() =
  if false do 0

print of Box(foo()).value
//│ > ()


fun foo() =
  while false do 0

print of Box(foo()).value
//│ > ()


:sjs
fun foo() = {}
//│ JS (unsanitized):
//│ let foo5; foo5 = function foo() { return runtime.Unit };

print of Box(foo()).value
//│ > ()


:sjs
fun foo(x) =
  set x = 1
//│ JS (unsanitized):
//│ let foo6; foo6 = function foo(x) { x = 1; return runtime.Unit };

print of Box(foo(1)).value
//│ > ()


:e
fun f = let x = 1
//│ ╔══[ERROR] Expected a body for let bindings in expression position
//│ ║  l.74: 	fun f = let x = 1
//│ ╙──      	            ^^^^^

print of f
//│ > ()


