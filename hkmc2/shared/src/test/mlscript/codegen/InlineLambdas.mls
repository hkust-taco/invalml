:js

:sjs
(x => x + 1 + 1 + 1 + 1 + 1)(1)
//│ JS (unsanitized):
//│ let lambda;
//│ lambda = (undefined, function (x) {
//│   let tmp, tmp1, tmp2, tmp3;
//│   tmp = x + 1;
//│   tmp1 = tmp + 1;
//│   tmp2 = tmp1 + 1;
//│   tmp3 = tmp2 + 1;
//│   return tmp3 + 1
//│ });
//│ lambda(1)
//│ = 6

:sjs
(x => x + 1 + 1 + 1 + 1 + 1 + 1)(1)
//│ JS (unsanitized):
//│ let tmp, lambda1;
//│ lambda1 = (undefined, function (x) {
//│   let tmp1, tmp2, tmp3, tmp4, tmp5;
//│   tmp1 = x + 1;
//│   tmp2 = tmp1 + 1;
//│   tmp3 = tmp2 + 1;
//│   tmp4 = tmp3 + 1;
//│   tmp5 = tmp4 + 1;
//│   return tmp5 + 1
//│ });
//│ tmp = lambda1;
//│ tmp(1)
//│ = 7

:sjs
(x => x) + 1
//│ JS (unsanitized):
//│ let lambda2; lambda2 = (undefined, function (x) { return x }); lambda2 + 1
//│ = "function (...args) {   runtime.checkArgs(\"\", 1, true, args.length);   let x = args[0];   return x }1"

:sjs
1 + (x => x)
//│ JS (unsanitized):
//│ let lambda3; lambda3 = (undefined, function (x) { return x }); 1 + lambda3
//│ = "1function (...args) {   runtime.checkArgs(\"\", 1, true, args.length);   let x = args[0];   return x }"


