:js


module Mod with
  fun print(x) = console.log(x)
  fun (|>) pipe(x, f) = f(x)

:ctx
open Mod
//│ Env:
//│   pipe -> SelElem(RefElem(member:Mod),pipe,Some(member:pipe),true)
//│   print -> SelElem(RefElem(member:Mod),print,Some(member:print),true)
//│   |> -> SelElem(RefElem(member:Mod),pipe,Some(member:pipe),true)

pipe
//│ = [function pipe]

(|>)
//│ = [function pipe]

|>
//│ = [function pipe]

:pe
:e
Mod.|>
//│ ╔══[PARSE ERROR] Expected start of statement in this position; found end of input instead
//│ ║  l.26: 	Mod.|>
//│ ╙──      	      ^
//│ ╔══[ERROR] Name not found: .|>
//│ ║  l.26: 	Mod.|>
//│ ╙──      	   ^^^


1 |> x => print(x)
//│ > 1


:pe
:e
open Mod { |> }
//│ ╔══[PARSE ERROR] Expected start of statement in this position; found end of input instead
//│ ║  l.41: 	open Mod { |> }
//│ ╙──      	              ^
//│ ╔══[ERROR] Illegal 'open' statement shape.
//│ ║  l.41: 	open Mod { |> }
//│ ╙──      	     ^^^^^^^^^


:e
open Mod { (|>) }
//│ ╔══[ERROR] Illegal 'open' statement element.
//│ ║  l.51: 	open Mod { (|>) }
//│ ╙──      	           ^^^^

12 |> print
//│ > 12


open Mod { print, |> }

:fixme
12 |> print
//│ ═══[RUNTIME ERROR] TypeError: Mod1.|> is not a function


