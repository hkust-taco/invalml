:js

:global
:sjs


data class Foo(arguments)
//│ JS (unsanitized):
//│ let Foo1;
//│ Foo1 = function Foo(arguments2) {
//│   return new Foo.class(arguments2);
//│ };
//│ Foo1.class = class Foo {
//│   constructor(arguments1) {
//│     this.arguments = arguments1;
//│   }
//│   toString() { return "Foo(" + runtime.render(this.arguments) + ")"; }
//│ };


data class Foo(eval)
//│ JS (unsanitized):
//│ let Foo3;
//│ Foo3 = function Foo(eval2) {
//│   return new Foo.class(eval2);
//│ };
//│ Foo3.class = class Foo2 {
//│   constructor(eval1) {
//│     this.eval = eval1;
//│   }
//│   toString() { return "Foo(" + runtime.render(this.eval) + ")"; }
//│ };


data class Foo(static)
//│ JS (unsanitized):
//│ let Foo5;
//│ Foo5 = function Foo(static2) {
//│   return new Foo.class(static2);
//│ };
//│ Foo5.class = class Foo4 {
//│   constructor(static1) {
//│     this.static = static1;
//│   }
//│   toString() { return "Foo(" + runtime.render(this.static) + ")"; }
//│ };


data class Foo(v')
//│ JS (unsanitized):
//│ let Foo7;
//│ Foo7 = function Foo(v$_1) {
//│   return new Foo.class(v$_1);
//│ };
//│ Foo7.class = class Foo6 {
//│   constructor(v$_) {
//│     this["v'"] = v$_;
//│   }
//│   toString() { return "Foo(" + runtime.render(this["v'"]) + ")"; }
//│ };


