:js


let x = 0
//│ x = 0

:sjs
let x += 1
//│ JS (unsanitized):
//│ let x1, tmp; tmp = x + 1; x1 = tmp;
//│ x = 1

x
//│ = 1

:sjs
set x = 0
//│ JS (unsanitized):
//│ x1 = 0; runtime.Unit

:sjs
set x += 1
//│ JS (unsanitized):
//│ let tmp1; tmp1 = x1 + 1; x1 = tmp1; runtime.Unit

x
//│ = 1


:sjs
set x += 1 in print(x)
//│ JS (unsanitized):
//│ let old, tmp2, tmp3, tmp4;
//│ old = x1;
//│ try {
//│   tmp3 = x1 + 1;
//│   x1 = tmp3;
//│   tmp4 = Predef.print(x1);
//│   tmp2 = tmp4;
//│ } finally {
//│   x1 = old;
//│ }
//│ tmp2
//│ > 2

x
//│ = 1


fun example() =
  let x = 0
  let get_x() = x
  let x += 1
  print(x)
  print(get_x())
example()
//│ > 1
//│ > 0

fun example() =
  let x = 0
  let get_x() = x
  set x += 1
  print(x)
  print(get_x())
example()
//│ > 1
//│ > 1

:sjs
fun example() =
  let x = 0
  let get_x() = x
  set x += 1 in print(x); print(get_x())
  print(x)
  print(get_x())
example()
//│ JS (unsanitized):
//│ let example2;
//│ example2 = function example() {
//│   let x2, get_x, old1, tmp5, tmp6, tmp7, tmp8, tmp9, tmp10, tmp11, tmp12, get_x1;
//│   x2 = 0;
//│   get_x1 = function get_x() {
//│     return x2
//│   };
//│   get_x = get_x1;
//│   old1 = x2;
//│   try {
//│     tmp6 = x2 + 1;
//│     x2 = tmp6;
//│     tmp7 = Predef.print(x2);
//│     tmp8 = runtime.safeCall(get_x());
//│     tmp9 = Predef.print(tmp8);
//│     tmp10 = (tmp7 , tmp9);
//│     tmp5 = tmp10;
//│   } finally {
//│     x2 = old1;
//│   }
//│   tmp11 = Predef.print(x2);
//│   tmp12 = runtime.safeCall(get_x());
//│   return Predef.print(tmp12)
//│ };
//│ example2()
//│ > 1
//│ > 1
//│ > 0
//│ > 0

:sjs
fun example() =
  let x = 0
  let get_x() = x
  let y =
    set x += 1 in print(x); x
  print(x)
  print(get_x())
  y
example()
//│ JS (unsanitized):
//│ let example3;
//│ example3 = function example() {
//│   let x2, get_x, y, old1, tmp5, tmp6, tmp7, tmp8, tmp9, tmp10, tmp11, get_x1;
//│   x2 = 0;
//│   get_x1 = function get_x() {
//│     return x2
//│   };
//│   get_x = get_x1;
//│   old1 = x2;
//│   try {
//│     tmp6 = x2 + 1;
//│     x2 = tmp6;
//│     tmp7 = Predef.print(x2);
//│     tmp8 = (tmp7 , x2);
//│     tmp5 = tmp8;
//│   } finally {
//│     x2 = old1;
//│   }
//│   y = tmp5;
//│   tmp9 = Predef.print(x2);
//│   tmp10 = runtime.safeCall(get_x());
//│   tmp11 = Predef.print(tmp10);
//│   return y
//│ };
//│ example3()
//│ > 1
//│ > 0
//│ > 0
//│ = 1

