:js



import "../../js/MyClass.mjs"
//│ MyClass = class MyClass {  constructor(name) {    this.name = name;  }  greet() {    console.log(`Hello from ${this.name}!`);  }}

MyClass
//│ = class MyClass {  constructor(name) {    this.name = name;  }  greet() {    console.log(`Hello from ${this.name}!`);  }}

new MyClass("Bob")
//│ = [object Object]

let C = MyClass
//│ C = class MyClass {  constructor(name) {    this.name = name;  }  greet() {    console.log(`Hello from ${this.name}!`);  }}

let c = C
//│ c = class MyClass {  constructor(name) {    this.name = name;  }  greet() {    console.log(`Hello from ${this.name}!`);  }}

:todo
new c("Bob")
//│ = [object Object]

:re
globalThis.MyClass
//│ ═══[RUNTIME ERROR] Error: Access to required field 'MyClass' yielded 'undefined'


:ge
fun foo() =
  import "../../js/MyClass.mjs"
  ()
//│ ╔══[COMPILATION ERROR] Imports must be at the top level
//│ ║  l.31: 	  import "../../js/MyClass.mjs"
//│ ╙──      	         ^^^^^^^^^^^^^^^^^^^^^^


