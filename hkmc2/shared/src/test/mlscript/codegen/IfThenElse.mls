:js


// :elt
if true then 1 else 0
//│ = 1


:sjs
let f = x => if x then print("ok") else print("ko")
//│ JS (unsanitized):
//│ let f, f1;
//│ f1 = function f(x) {
//│   if (x === true) {
//│     return Predef.print("ok")
//│   } else {
//│     return Predef.print("ko")
//│   }
//│ };
//│ f = f1;
//│ f = [function f]

f(true)
//│ > ok

f(false)
//│ > ko


:sjs
let f = x => print((if x then "ok" else "ko") + "!")
//│ JS (unsanitized):
//│ let f2, tmp, lambda;
//│ lambda = (undefined, function (x) {
//│   let tmp1, tmp2;
//│   if (x === true) {
//│     tmp1 = "ok";
//│   } else {
//│     tmp1 = "ko";
//│   }
//│   tmp2 = tmp1 + "!";
//│   return Predef.print(tmp2)
//│ });
//│ tmp = lambda;
//│ f2 = tmp;
//│ f = [function]

:sjs
let f = x => print((if x and x then "ok" else "ko") + "!")
//│ JS (unsanitized):
//│ let f3, tmp1, lambda1;
//│ lambda1 = (undefined, function (x) {
//│   let tmp2, tmp3;
//│   if (x === true) {
//│     tmp2 = "ok";
//│   } else {
//│     tmp2 = "ko";
//│   }
//│   tmp3 = tmp2 + "!";
//│   return Predef.print(tmp3)
//│ });
//│ tmp1 = lambda1;
//│ f3 = tmp1;
//│ f = [function]
// --- TODO: What we want ---
// this.f = (x) => {
//   let tmp, tmp1, flag;
//   if (x) {
//     if (x) {
//       tmp = "ok";
//     } else {
//       flag = 1;
//     }
//   } else {
//     flag = 1;
//   }
//   if (flag === 1) {
//     tmp = "ko";
//   }
//   tmp1 = tmp + "!";
//   return print(tmp1)
// };
// undefined
// f = [Function (anonymous)]

f(true)
//│ > ok!

f(false)
//│ > ko!


x => if x > 0 then print("Hi") else print("Bye")
//│ = [function]

x => print(if true then "Hi" else "Bye")
//│ = [function]

x => print(if x + 1 > 0 then "Hi" else "Bye")
//│ = [function]

x =>
  let str = (+)(if x + 1 > 0 then "Hello" else "Bye", "World")
  print(str)
//│ = [function]


fun f(x, y) =
  if x
    then y

f(true, 42)
//│ = 42

:re
f(false, 42)
//│ ═══[RUNTIME ERROR] Error: match error


fun f(x, y, z) = if x then y else z

f(true, 0, 1)
//│ = 0


fun f(x, y, z) =
  if x
    then y
    else z

f(true, 1, 0)
//│ = 1

f(false, 1, 0)
//│ = 0


if true then
  100
//│ = 100

if true then
  100
else
  0
//│ = 100

if true then
  100
else
  fun f(x) = x
  f(3)
//│ = 100

if true then
  fun f(x) = x
  f(3)
else
  100
//│ = 3


