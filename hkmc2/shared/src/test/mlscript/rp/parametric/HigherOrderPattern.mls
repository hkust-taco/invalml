:js

open annotations { compile }

pattern Nullable(pattern T) = null | T

object A

:e
null is @compile Nullable
//│ ╔══[ERROR] Pattern `Nullable` expects 1 pattern argument
//│ ║  l.5: 	pattern Nullable(pattern T) = null | T
//│ ║       	                         ^
//│ ╙── But 0 pattern arguments were given
//│ = false

:e
null is @compile Nullable(pattern A, pattern A)
//│ ╔══[ERROR] Pattern `Nullable` expects 1 pattern argument
//│ ║  l.5: 	pattern Nullable(pattern T) = null | T
//│ ║       	                         ^
//│ ╙── But 2 pattern arguments were given
//│ = false

pattern Nullable(pattern T) = null | T

null is @compile Nullable(pattern Int)
//│ = true

A is @compile Nullable(pattern A)
//│ = true

2 is @compile Nullable(pattern 1 | 2)
//│ = true

data class Pair[A, B](val first: A, val second: B)

pattern Stack(pattern T) = null | Pair(T, Stack(T))

null is @compile Stack(pattern A)
//│ = true

fun (#:) pair(a, b) = Pair(a, b)

A #: null is @compile Stack(pattern A)
//│ = true

A #: A #: null is @compile Stack(pattern A)
//│ = true

A #: A #: A #: null is @compile Stack(pattern A)
//│ = true

object B

A #: B #: A #: null is @compile Stack(pattern A)
//│ = false

A #: B #: A #: null is @compile Stack(pattern B)
//│ = false

let zeroOne = 0 #: 1 #: null
let oneZero = 1 #: 0 #: null
//│ oneZero = Pair(1, Pair(0, null))
//│ zeroOne = Pair(0, Pair(1, null))

:global
:expect true

A #: B #: A #: null is @compile Stack(pattern A | B)
//│ = true

A #: B #: A #: null is @compile Stack(pattern B | A)
//│ = true

zeroOne is @compile Stack(pattern 0 | 1)
//│ = true

oneZero is @compile Stack(pattern 0 | 1)
//│ = true

null #: null is @compile Stack(pattern Stack(pattern 0 | 1))
//│ = true

zeroOne #: null is @compile Stack(pattern Stack(pattern 0 | 1))
//│ = true

null #: (1 #: null) #: null is @compile Stack(pattern Stack(pattern 0 | 1))
//│ = true

zeroOne #: oneZero #: null is @compile Stack(pattern Stack(pattern 0 | 1))
//│ = true

zeroOne #: null #: oneZero #: null is @compile Stack(pattern Stack(pattern 0 | 1))
//│ = true

null #: zeroOne #: zeroOne #: null is @compile Stack(pattern Stack(pattern 0 | 1))
//│ = true
