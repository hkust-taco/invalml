:js
:effectHandlers

abstract class Effect with
  fun perform(): ()

let h1 = null
handle h = Effect with
  fun perform()(k) =
    print("perform")
    k()
    print("perform-end")
set h1 = h
//│ h1 = Handler$h$

:re
h1.perform()
//│ ═══[RUNTIME ERROR] Error: Unhandled effect Handler$h$

enterHandleBlock(h1, () => h1.perform())
//│ > perform
//│ > perform-end

let h2 = null
handle h = Effect with
  fun perform()(k) =
    print("perform2")
    k()
    print("perform-end2")
set h2 = h
//│ h2 = Handler$h$

// This causes the scenario where next is null but nextHandler is not null in the runtime
enterHandleBlock(h1, () => enterHandleBlock(h2, () =>
  h1.perform()
  h2.perform()
  h1.perform()
))
//│ > perform
//│ > perform2
//│ > perform
//│ > perform-end2
//│ > perform-end
//│ > perform-end
